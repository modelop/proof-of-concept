# Manifest file that describes kubernetes 'deployments' and supporting 'services'
# for 'auxilliary' components to a fastscore environment
# Microservices included are:
#
# fastscore/model-manage-mysql (as 'database')
# fastscore/kafka (as 'kafka')
# fastscore/influx (as 'influx')
#
# NOTE: All directories mounted in the 'volumeMounts' sections of these deployments are
# required for for services to run
# 
# NOTE: Any secrets or configMaps referred to in this manifest must be created outside of this file by running the appropriate commands
# e.g. `kubectl create secret generic <secretname> --from-file=./path/to/file/containing/secret
# See README.md in this project for more specific information

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: database
spec:
  replicas: 1
  template:
    metadata:
      annotations:
      labels:
        service: database
        app: database
        stack: fastscore
    spec:
      containers:
      - name: database
        image: fastscore/model-manage-mysql:1.9
        volumeMounts:
        - mountPath: /var/tmp
          name: temp-dir
        - mountPath: /var/lib/mysql
          name: data-dir
        - mountPath: /var/run/mysqld
          name: sock-dir
        ports:
        - containerPort: 3306
          protocol: TCP
        resources: {}
      volumes:
      - emptyDir: {}
        name: temp-dir
      - emptyDir: {}
        name: data-dir
      - emptyDir: {}
        name: sock-dir
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: database
    app: database
    stack: fastscore
  name: database
spec:
  ports:
  - name: 3306-tcp
    port: 3306
    protocol: TCP
    targetPort: 3306
  selector:
    service: database
    app: database
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kafka
spec:
  replicas: 1
  template:
    metadata:
      annotations:
      labels:
        service: kafka
        app: kafka
        stack: fastscore
    spec:
      containers:
      - name: kafka
        image: fastscore/kafka:latest
        volumeMounts:
        - mountPath: /tmp
          name: temp-dir
        - mountPath: /kafka/logs
          name: log-dir
        ports:
        - containerPort: 2181
          protocol: TCP
        - containerPort: 2888
          protocol: TCP
        - containerPort: 3888
          protocol: TCP
        - containerPort: 9092
          protocol: TCP
        resources: {}
        stdin: true
        tty: true
      securityContext:
        runAsUser: 1005001
      volumes:
      - emptyDir: {}
        name: temp-dir
      - emptyDir: {}
        name: log-dir
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: kafka
    app: kafka
    stack: fastscore
  name: kafka
spec:
  ports:
  - name: 2181-tcp
    port: 2181
    protocol: TCP
    targetPort: 2181
  - name: 2888-tcp
    port: 2888
    protocol: TCP
    targetPort: 2888
  - name: 3888-tcp
    port: 3888
    protocol: TCP
    targetPort: 3888
  - name: 9092-tcp
    port: 9092
    protocol: TCP
    targetPort: 9092
  selector:
    service: kafka
    app: kafka
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: influxdb
    app: influxdb
    stack: fastscore
  name: influxdb
spec:
  ports:
  - name: 8083-tcp
    port: 8083
    protocol: TCP
    targetPort: 8083
  - name: 8086-tcp
    port: 8086
    protocol: TCP
    targetPort: 8086
  - name: 8090-tcp
    port: 8090
    protocol: TCP
    targetPort: 8090
  selector:
    service: influxdb
    app: influxdb
    stack: fastscore
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: influxdb
  labels:
    service: influxdb
    app: influxdb
    stack: fastscore
spec:
  replicas: 1
  template:
    metadata:
      labels:
        service: influxdb
        app: influxdb
        stack: fastscore
    spec:
      containers:
      - name: influxdb
        image: fastscore/influx:1.9
        env:
        - name: INFLUXDB_DATA_ENGINE
          value: "tsm1"
        ports:
        - containerPort: 8083
          protocol: TCP
        - containerPort: 8086
          protocol: TCP
        - containerPort: 8090
          protocol: TCP
        volumeMounts:
        - mountPath: /var/lib/influxdb
          name: influxdb-data-dir
        resources: {}
        stdin: true
        tty: true
      volumes:
      - name: influxdb-data-dir
        emptyDir: {}
      restartPolicy: Always
status: {}
